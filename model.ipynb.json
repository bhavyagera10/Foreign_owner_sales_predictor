{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting pandas\n",
      "  Downloading pandas-1.0.3-cp37-cp37m-macosx_10_9_x86_64.whl (10.0 MB)\n",
      "\u001b[K     |████████████████████████████████| 10.0 MB 4.3 MB/s eta 0:00:01\n",
      "\u001b[?25hCollecting pytz>=2017.2\n",
      "  Downloading pytz-2020.1-py2.py3-none-any.whl (510 kB)\n",
      "\u001b[K     |████████████████████████████████| 510 kB 5.0 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/site-packages (from pandas) (1.18.2)\n",
      "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/site-packages (from pandas) (2.8.1)\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/site-packages (from python-dateutil>=2.6.1->pandas) (1.14.0)\n",
      "Installing collected packages: pytz, pandas\n",
      "Successfully installed pandas-1.0.3 pytz-2020.1\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "!{sys.executable} -m pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already up-to-date: pip in ./Library/Python/2.7/lib/python/site-packages (20.1)\n"
     ]
    }
   ],
   "source": [
    "!/usr/bin/python -m pip install --upgrade pip\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[7.1470380e+04 8.2140000e+01 1.6894150e+04 1.1102170e+04 2.1000000e+00\n",
      "  1.5894123e+05]\n",
      " [4.4144000e+04 7.3550000e+01 3.5163000e+04 5.8340000e+03 1.5700000e+00\n",
      "  5.2975700e+05]\n",
      " [2.1544650e+04 7.6100000e+01 7.1320200e+03 3.6641800e+03 1.2300000e+00\n",
      "  5.0320540e+04]\n",
      " ...\n",
      " [          nan           nan           nan           nan           nan\n",
      "  1.6774450e+04]\n",
      " [          nan           nan           nan           nan           nan\n",
      "  1.6680850e+04]\n",
      " [          nan           nan           nan           nan           nan\n",
      "  1.6348190e+04]]\n",
      "[[527692.69]\n",
      " [371019.  ]\n",
      " [297275.05]\n",
      " [275197.42]\n",
      " [242868.65]\n",
      " [123170.  ]\n",
      " [109609.42]\n",
      " [ 98972.05]\n",
      " [ 90307.43]\n",
      " [ 86987.86]\n",
      " [ 86020.3 ]\n",
      " [ 76727.  ]\n",
      " [ 75126.3 ]\n",
      " [ 73107.  ]\n",
      " [ 70610.71]\n",
      " [ 69202.76]\n",
      " [ 69202.76]\n",
      " [ 66967.31]\n",
      " [ 63401.19]\n",
      " [ 62062.14]\n",
      " [ 54985.77]\n",
      " [ 53614.  ]\n",
      " [ 51310.25]\n",
      " [ 49974.11]\n",
      " [ 49608.  ]\n",
      " [ 48123.8 ]\n",
      " [ 46810.34]\n",
      " [ 45749.16]\n",
      " [ 44995.65]\n",
      " [ 43348.04]\n",
      " [ 42670.89]\n",
      " [ 41338.39]\n",
      " [ 40767.81]\n",
      " [ 38644.  ]\n",
      " [ 38395.43]\n",
      " [ 38224.  ]\n",
      " [ 36858.8 ]\n",
      " [ 35703.5 ]\n",
      " [ 34119.12]\n",
      " [ 34066.66]\n",
      " [ 33650.54]\n",
      " [ 30348.95]\n",
      " [ 30249.96]\n",
      " [ 29624.75]\n",
      " [ 29054.95]\n",
      " [ 28979.44]\n",
      " [ 28842.  ]\n",
      " [ 28496.77]\n",
      " [ 27715.97]\n",
      " [ 27219.6 ]\n",
      " [ 26012.  ]\n",
      " [ 25309.72]\n",
      " [ 23943.21]\n",
      " [ 23286.53]\n",
      " [ 22638.57]\n",
      " [ 22261.15]\n",
      " [ 22071.24]\n",
      " [ 21118.  ]\n",
      " [ 20891.6 ]\n",
      " [ 20550.43]\n",
      " [ 20164.9 ]\n",
      " [ 19916.25]\n",
      " [ 19894.12]\n",
      " [ 19184.81]\n",
      " [ 19069.97]\n",
      " [ 18209.92]\n",
      " [ 17631.26]\n",
      " [ 17383.97]\n",
      " [ 17355.02]\n",
      " [ 16851.21]\n",
      " [ 16391.78]\n",
      " [ 15837.  ]\n",
      " [ 15656.65]\n",
      " [ 15541.3 ]\n",
      " [ 15522.44]\n",
      " [ 15407.35]\n",
      " [ 14330.63]\n",
      " [ 14081.15]\n",
      " [ 13734.96]\n",
      " [ 13683.8 ]\n",
      " [ 13495.65]\n",
      " [ 13203.85]\n",
      " [ 12977.52]\n",
      " [ 12883.88]\n",
      " [ 12729.23]\n",
      " [ 12585.01]\n",
      " [ 12374.01]\n",
      " [ 12368.9 ]\n",
      " [ 12353.77]\n",
      " [ 12257.9 ]\n",
      " [ 12257.89]\n",
      " [ 12245.24]\n",
      " [ 12152.67]\n",
      " [ 12084.6 ]\n",
      " [ 12079.76]\n",
      " [ 11948.17]\n",
      " [ 11722.  ]\n",
      " [ 11667.88]\n",
      " [ 11499.32]\n",
      " [ 11419.02]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]\n",
      " [      nan]]\n"
     ]
    }
   ],
   "source": [
    "dataset = pd.read_csv('dataf.csv')\n",
    "X = dataset.iloc[0:, 2:8].values\n",
    "#X = X.replace(',', '')\n",
    "#for c in X.split(\",\"):\n",
    "#X=[float(c) for c in X.split(',')]\n",
    "  #print float(c)\n",
    "#y = dataset.iloc[:, 3].values\n",
    "#dataset.['Company Name']=dataset.['Company Name'].astype(float)\n",
    "#y = dataset.iloc[:, 1].values\n",
    "y = dataset.iloc[:, 1:2].values\n",
    "print(X)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Collecting sklearn\n",
      "  Downloading sklearn-0.0.tar.gz (1.1 kB)\n",
      "Collecting scikit-learn\n",
      "  Downloading scikit_learn-0.20.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.3 MB)\n",
      "\u001b[K     |████████████████████████████████| 8.3 MB 2.0 MB/s eta 0:00:01\n",
      "\u001b[?25hCollecting scipy>=0.13.3\n",
      "  Downloading scipy-1.2.3-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (27.4 MB)\n",
      "\u001b[K     |████████████████████████████████| 27.4 MB 5.1 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: numpy>=1.8.2 in ./Library/Python/2.7/lib/python/site-packages (from scikit-learn->sklearn) (1.16.6)\n",
      "Building wheels for collected packages: sklearn\n",
      "  Building wheel for sklearn (setup.py) ... \u001b[?25ldone\n",
      "\u001b[?25h  Created wheel for sklearn: filename=sklearn-0.0-py2.py3-none-any.whl size=1285 sha256=66212aa229552598a58f16f49616e93ba11728c20ff2707990e37c41ecb3240f\n",
      "  Stored in directory: /Users/lalitgera/Library/Caches/pip/wheels/92/41/c1/46aa0ff43ae6274c41ffea0abc81426980f263d53d30fbc7b9\n",
      "Successfully built sklearn\n",
      "Installing collected packages: scipy, scikit-learn, sklearn\n",
      "Successfully installed scikit-learn-0.20.4 scipy-1.2.3 sklearn-0.0\n"
     ]
    }
   ],
   "source": [
    "!pip install sklearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "\u001b[31mERROR: Could not find a version that satisfies the requirement sklearn.preprocessing (from versions: none)\u001b[0m\n",
      "\u001b[31mERROR: No matching distribution found for sklearn.preprocessing\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "!python -m pip install sklearn.preprocessing\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: ipykernel in /usr/local/lib/python3.7/site-packages (5.2.0)\n",
      "Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.7/site-packages (from ipykernel) (6.0.4)\n",
      "Requirement already satisfied: appnope; platform_system == \"Darwin\" in /usr/local/lib/python3.7/site-packages (from ipykernel) (0.1.0)\n",
      "Requirement already satisfied: jupyter-client in /usr/local/lib/python3.7/site-packages (from ipykernel) (6.1.2)\n",
      "Requirement already satisfied: traitlets>=4.1.0 in /usr/local/lib/python3.7/site-packages (from ipykernel) (4.3.3)\n",
      "Requirement already satisfied: ipython>=5.0.0 in /usr/local/lib/python3.7/site-packages (from ipykernel) (7.13.0)\n",
      "Requirement already satisfied: jupyter-core>=4.6.0 in /usr/local/lib/python3.7/site-packages (from jupyter-client->ipykernel) (4.6.3)\n",
      "Requirement already satisfied: pyzmq>=13 in /usr/local/lib/python3.7/site-packages (from jupyter-client->ipykernel) (19.0.0)\n",
      "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/site-packages (from jupyter-client->ipykernel) (2.8.1)\n",
      "Requirement already satisfied: decorator in /usr/local/lib/python3.7/site-packages (from traitlets>=4.1.0->ipykernel) (4.4.2)\n",
      "Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/site-packages (from traitlets>=4.1.0->ipykernel) (0.2.0)\n",
      "Requirement already satisfied: six in /usr/local/lib/python3.7/site-packages (from traitlets>=4.1.0->ipykernel) (1.14.0)\n",
      "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (3.0.5)\n",
      "Requirement already satisfied: pygments in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (2.6.1)\n",
      "Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (4.8.0)\n",
      "Requirement already satisfied: jedi>=0.10 in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (0.16.0)\n",
      "Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (46.0.0)\n",
      "Requirement already satisfied: backcall in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (0.1.0)\n",
      "Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/site-packages (from ipython>=5.0.0->ipykernel) (0.7.5)\n",
      "Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.0.0->ipykernel) (0.1.9)\n",
      "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/site-packages (from pexpect; sys_platform != \"win32\"->ipython>=5.0.0->ipykernel) (0.6.0)\n",
      "Requirement already satisfied: parso>=0.5.2 in /usr/local/lib/python3.7/site-packages (from jedi>=0.10->ipython>=5.0.0->ipykernel) (0.6.2)\n"
     ]
    }
   ],
   "source": [
    "!python3 -m pip install ipykernel\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Installed kernelspec python3 in /Users/lalitgera/Library/Jupyter/kernels/python3\r\n"
     ]
    }
   ],
   "source": [
    "!python3 -m ipykernel install --user"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Collecting scikit-learn==0.20.2\n",
      "  Downloading scikit_learn-0.20.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.3 MB)\n",
      "\u001b[K     |████████████████████████████████| 8.3 MB 2.0 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied, skipping upgrade: scipy>=0.13.3 in ./Library/Python/2.7/lib/python/site-packages (from scikit-learn==0.20.2) (1.2.3)\n",
      "Requirement already satisfied, skipping upgrade: numpy>=1.8.2 in ./Library/Python/2.7/lib/python/site-packages (from scikit-learn==0.20.2) (1.16.6)\n",
      "Installing collected packages: scikit-learn\n",
      "  Attempting uninstall: scikit-learn\n",
      "    Found existing installation: scikit-learn 0.20.4\n",
      "    Uninstalling scikit-learn-0.20.4:\n",
      "      Successfully uninstalled scikit-learn-0.20.4\n",
      "Successfully installed scikit-learn-0.20.2\n"
     ]
    }
   ],
   "source": [
    "!pip install --user --upgrade scikit-learn==0.20.4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Collecting scikit-learn\n",
      "  Using cached scikit_learn-0.20.4-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.3 MB)\n",
      "Requirement already satisfied, skipping upgrade: scipy>=0.13.3 in ./Library/Python/2.7/lib/python/site-packages (from scikit-learn) (1.2.3)\n",
      "Requirement already satisfied, skipping upgrade: numpy>=1.8.2 in ./Library/Python/2.7/lib/python/site-packages (from scikit-learn) (1.16.6)\n",
      "Installing collected packages: scikit-learn\n",
      "  Attempting uninstall: scikit-learn\n",
      "    Found existing installation: scikit-learn 0.18.1\n",
      "    Uninstalling scikit-learn-0.18.1:\n",
      "      Successfully uninstalled scikit-learn-0.18.1\n",
      "Successfully installed scikit-learn-0.20.4\n"
     ]
    }
   ],
   "source": [
    "!python -m pip install scikit-learn --upgrade"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'sklearn'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-37-2e97a66a2985>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImputer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'sklearn'"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'sklearn'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-38-ed2ab612d27e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpreprocessing\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mprep\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprep\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'sklearn'"
     ]
    }
   ],
   "source": [
    "from sklearn import preprocessing as prep\n",
    "prep.normalize(x,y,z) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting scikit-learn\n",
      "  Downloading scikit_learn-0.22.2.post1-cp37-cp37m-macosx_10_9_x86_64.whl (7.1 MB)\n",
      "\u001b[K     |████████████████████████████████| 7.1 MB 3.7 MB/s eta 0:00:01\n",
      "\u001b[?25hCollecting scipy\n",
      "  Downloading scipy-1.4.1-cp37-cp37m-macosx_10_6_intel.whl (28.4 MB)\n",
      "\u001b[K     |████████████████████████████████| 28.4 MB 5.5 MB/s eta 0:00:01     |██████████████▏                 | 12.6 MB 3.8 MB/s eta 0:00:05     |█████████████████████▊          | 19.3 MB 2.4 MB/s eta 0:00:04\n",
      "\u001b[?25hRequirement already up-to-date: matplotlib in /usr/local/lib/python3.7/site-packages (3.2.1)\n",
      "Requirement already satisfied, skipping upgrade: numpy>=1.11.0 in /usr/local/lib/python3.7/site-packages (from scikit-learn) (1.18.2)\n",
      "Collecting joblib>=0.11\n",
      "  Downloading joblib-0.14.1-py2.py3-none-any.whl (294 kB)\n",
      "\u001b[K     |████████████████████████████████| 294 kB 4.6 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied, skipping upgrade: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/site-packages (from matplotlib) (1.1.0)\n",
      "Requirement already satisfied, skipping upgrade: cycler>=0.10 in /usr/local/lib/python3.7/site-packages (from matplotlib) (0.10.0)\n",
      "Requirement already satisfied, skipping upgrade: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/site-packages (from matplotlib) (2.4.6)\n",
      "Requirement already satisfied, skipping upgrade: python-dateutil>=2.1 in /usr/local/lib/python3.7/site-packages (from matplotlib) (2.8.1)\n",
      "Requirement already satisfied, skipping upgrade: setuptools in /usr/local/lib/python3.7/site-packages (from kiwisolver>=1.0.1->matplotlib) (46.0.0)\n",
      "Requirement already satisfied, skipping upgrade: six in /usr/local/lib/python3.7/site-packages (from cycler>=0.10->matplotlib) (1.14.0)\n",
      "Installing collected packages: scipy, joblib, scikit-learn\n",
      "Successfully installed joblib-0.14.1 scikit-learn-0.22.2.post1 scipy-1.4.1\n"
     ]
    }
   ],
   "source": [
    "!pip3 install -U scikit-learn scipy matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "ename": "ImportError",
     "evalue": "cannot import name 'Imputer' from 'sklearn.impute' (/usr/local/lib/python3.7/site-packages/sklearn/impute/__init__.py)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-41-ca04c32f4310>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimpute\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mImputer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mImportError\u001b[0m: cannot import name 'Imputer' from 'sklearn.impute' (/usr/local/lib/python3.7/site-packages/sklearn/impute/__init__.py)"
     ]
    }
   ],
   "source": [
    "from sklearn.impute import Imputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.impute import SimpleImputer\n",
    "imputer = SimpleImputer(strategy='median')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[7.1470380e+04 8.2140000e+01 1.6894150e+04 1.1102170e+04 2.1000000e+00\n",
      "  1.5894123e+05]\n",
      " [4.4144000e+04 7.3550000e+01 3.5163000e+04 5.8340000e+03 1.5700000e+00\n",
      "  5.2975700e+05]\n",
      " [2.1544650e+04 7.6100000e+01 7.1320200e+03 3.6641800e+03 1.2300000e+00\n",
      "  5.0320540e+04]\n",
      " ...\n",
      " [5.2883223e+03 6.2628300e+01 4.3748585e+03 4.4213657e+03 1.9752100e+01\n",
      "  1.6774450e+04]\n",
      " [5.2883223e+03 6.2628300e+01 4.3748585e+03 4.4213657e+03 1.9752100e+01\n",
      "  1.6680850e+04]\n",
      " [5.2883223e+03 6.2628300e+01 4.3748585e+03 4.4213657e+03 1.9752100e+01\n",
      "  1.6348190e+04]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.impute import SimpleImputer \n",
    "imputer=SimpleImputer(missing_values=np.nan,strategy='mean')\n",
    "imputer=imputer.fit(X[:,0:6])\n",
    "X[:,0:6]=imputer.transform(X[:,0:6])\n",
    "print(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "imputer = SimpleImputer(missing_data = np.nan, strategy ='mean') \n",
    "  \n",
    " \n",
    "  \n",
    "print(\"Original Data : \\n\", data) \n",
    "# Fitting the data to the imputer object \n",
    "imputer = imputer.fit(data) \n",
    "  \n",
    "# Imputing the data      \n",
    "data = imputer.transform(data) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[527692.69 ]\n",
      " [371019.   ]\n",
      " [297275.05 ]\n",
      " [275197.42 ]\n",
      " [242868.65 ]\n",
      " [123170.   ]\n",
      " [109609.42 ]\n",
      " [ 98972.05 ]\n",
      " [ 90307.43 ]\n",
      " [ 86987.86 ]\n",
      " [ 86020.3  ]\n",
      " [ 76727.   ]\n",
      " [ 75126.3  ]\n",
      " [ 73107.   ]\n",
      " [ 70610.71 ]\n",
      " [ 69202.76 ]\n",
      " [ 69202.76 ]\n",
      " [ 66967.31 ]\n",
      " [ 63401.19 ]\n",
      " [ 62062.14 ]\n",
      " [ 54985.77 ]\n",
      " [ 53614.   ]\n",
      " [ 51310.25 ]\n",
      " [ 49974.11 ]\n",
      " [ 49608.   ]\n",
      " [ 48123.8  ]\n",
      " [ 46810.34 ]\n",
      " [ 45749.16 ]\n",
      " [ 44995.65 ]\n",
      " [ 43348.04 ]\n",
      " [ 42670.89 ]\n",
      " [ 41338.39 ]\n",
      " [ 40767.81 ]\n",
      " [ 38644.   ]\n",
      " [ 38395.43 ]\n",
      " [ 38224.   ]\n",
      " [ 36858.8  ]\n",
      " [ 35703.5  ]\n",
      " [ 34119.12 ]\n",
      " [ 34066.66 ]\n",
      " [ 33650.54 ]\n",
      " [ 30348.95 ]\n",
      " [ 30249.96 ]\n",
      " [ 29624.75 ]\n",
      " [ 29054.95 ]\n",
      " [ 28979.44 ]\n",
      " [ 28842.   ]\n",
      " [ 28496.77 ]\n",
      " [ 27715.97 ]\n",
      " [ 27219.6  ]\n",
      " [ 26012.   ]\n",
      " [ 25309.72 ]\n",
      " [ 23943.21 ]\n",
      " [ 23286.53 ]\n",
      " [ 22638.57 ]\n",
      " [ 22261.15 ]\n",
      " [ 22071.24 ]\n",
      " [ 21118.   ]\n",
      " [ 20891.6  ]\n",
      " [ 20550.43 ]\n",
      " [ 20164.9  ]\n",
      " [ 19916.25 ]\n",
      " [ 19894.12 ]\n",
      " [ 19184.81 ]\n",
      " [ 19069.97 ]\n",
      " [ 18209.92 ]\n",
      " [ 17631.26 ]\n",
      " [ 17383.97 ]\n",
      " [ 17355.02 ]\n",
      " [ 16851.21 ]\n",
      " [ 16391.78 ]\n",
      " [ 15837.   ]\n",
      " [ 15656.65 ]\n",
      " [ 15541.3  ]\n",
      " [ 15522.44 ]\n",
      " [ 15407.35 ]\n",
      " [ 14330.63 ]\n",
      " [ 14081.15 ]\n",
      " [ 13734.96 ]\n",
      " [ 13683.8  ]\n",
      " [ 13495.65 ]\n",
      " [ 13203.85 ]\n",
      " [ 12977.52 ]\n",
      " [ 12883.88 ]\n",
      " [ 12729.23 ]\n",
      " [ 12585.01 ]\n",
      " [ 12374.01 ]\n",
      " [ 12368.9  ]\n",
      " [ 12353.77 ]\n",
      " [ 12257.9  ]\n",
      " [ 12257.89 ]\n",
      " [ 12245.24 ]\n",
      " [ 12152.67 ]\n",
      " [ 12084.6  ]\n",
      " [ 12079.76 ]\n",
      " [ 11948.17 ]\n",
      " [ 11722.   ]\n",
      " [ 11667.88 ]\n",
      " [ 11499.32 ]\n",
      " [ 11419.02 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.impute import SimpleImputer \n",
    "imputer=SimpleImputer(missing_values=np.nan,strategy='mean')\n",
    "imputer=imputer.fit(y[:,0:1])\n",
    "y[:,0:1]=imputer.transform(y[:,0:1])\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"None of [Float64Index([527692.69,  371019.0, 297275.05, 275197.42, 242868.65,  123170.0,\\n              109609.42,  98972.05,  90307.43,  86987.86,\\n              ...\\n                    nan,       nan,       nan,       nan,       nan,       nan,\\n                    nan,       nan,       nan,       nan],\\n             dtype='float64', length=230)] are in the [columns]\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-80-99652ffbe157>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnan\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m# fill missing values with mean column values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfillna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   2804\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2805\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2806\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_listlike_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2807\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2808\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_listlike_indexer\u001b[0;34m(self, key, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1551\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1552\u001b[0m         self._validate_read_indexer(\n\u001b[0;32m-> 1553\u001b[0;31m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_number\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mraise_missing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mraise_missing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1554\u001b[0m         )\n\u001b[1;32m   1555\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_validate_read_indexer\u001b[0;34m(self, key, indexer, axis, raise_missing)\u001b[0m\n\u001b[1;32m   1638\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mmissing\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1639\u001b[0m                 \u001b[0maxis_name\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis_name\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1640\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of [{key}] are in the [{axis_name}]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1641\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1642\u001b[0m             \u001b[0;31m# We (temporarily) allow for some missing keys with .loc, except in\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyError\u001b[0m: \"None of [Float64Index([527692.69,  371019.0, 297275.05, 275197.42, 242868.65,  123170.0,\\n              109609.42,  98972.05,  90307.43,  86987.86,\\n              ...\\n                    nan,       nan,       nan,       nan,       nan,       nan,\\n                    nan,       nan,       nan,       nan],\\n             dtype='float64', length=230)] are in the [columns]\""
     ]
    }
   ],
   "source": [
    "dataset[y] = dataset[y].replace(0, nan)\n",
    "# fill missing values with mean column values\n",
    "dataset.fillna(dataset.mean(), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "sc_X = StandardScaler()\n",
    "X_train = sc_X.fit_transform(X_train)\n",
    "X_test = sc_X.transform(X_test)\n",
    "sc_y = StandardScaler()\n",
    "y_train = sc_y.fit_transform(y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "def clean_dataset(df):\n",
    "    assert isinstance(df, pd.DataFrame), \"df needs to be a pd.DataFrame\"\n",
    "    df.dropna(inplace=True)\n",
    "    indices_to_keep = ~df.isin([np.nan, np.inf, -np.inf]).any(1)\n",
    "    return df[indices_to_keep].astype(np.float64)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>0.1</th>\n",
       "      <th>0.2</th>\n",
       "      <th>0.3</th>\n",
       "      <th>0.4</th>\n",
       "      <th>0.5</th>\n",
       "      <th>0.6</th>\n",
       "      <th>0.7</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>527692.69</td>\n",
       "      <td>71470.38</td>\n",
       "      <td>82.14</td>\n",
       "      <td>16894.15</td>\n",
       "      <td>11102.17</td>\n",
       "      <td>2.10</td>\n",
       "      <td>158941.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>371019.00</td>\n",
       "      <td>44144.00</td>\n",
       "      <td>73.55</td>\n",
       "      <td>35163.00</td>\n",
       "      <td>5834.00</td>\n",
       "      <td>1.57</td>\n",
       "      <td>529757.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>297275.05</td>\n",
       "      <td>21544.65</td>\n",
       "      <td>76.10</td>\n",
       "      <td>7132.02</td>\n",
       "      <td>3664.18</td>\n",
       "      <td>1.23</td>\n",
       "      <td>50320.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>275197.42</td>\n",
       "      <td>20193.42</td>\n",
       "      <td>77.84</td>\n",
       "      <td>6028.66</td>\n",
       "      <td>2938.48</td>\n",
       "      <td>1.07</td>\n",
       "      <td>39869.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.0</td>\n",
       "      <td>109609.42</td>\n",
       "      <td>7749.17</td>\n",
       "      <td>46.42</td>\n",
       "      <td>26715.79</td>\n",
       "      <td>12113.03</td>\n",
       "      <td>11.05</td>\n",
       "      <td>185075.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.0</td>\n",
       "      <td>90307.43</td>\n",
       "      <td>7988.02</td>\n",
       "      <td>43.02</td>\n",
       "      <td>11749.89</td>\n",
       "      <td>4779.89</td>\n",
       "      <td>5.29</td>\n",
       "      <td>201121.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.0</td>\n",
       "      <td>86020.30</td>\n",
       "      <td>3325.70</td>\n",
       "      <td>57.19</td>\n",
       "      <td>7500.60</td>\n",
       "      <td>3254.90</td>\n",
       "      <td>3.78</td>\n",
       "      <td>42713.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>0.0</td>\n",
       "      <td>76727.00</td>\n",
       "      <td>10599.00</td>\n",
       "      <td>46.03</td>\n",
       "      <td>8259.00</td>\n",
       "      <td>1400.00</td>\n",
       "      <td>1.82</td>\n",
       "      <td>58826.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>0.0</td>\n",
       "      <td>75126.30</td>\n",
       "      <td>2321.91</td>\n",
       "      <td>30.56</td>\n",
       "      <td>6025.67</td>\n",
       "      <td>1778.37</td>\n",
       "      <td>2.37</td>\n",
       "      <td>39494.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.0</td>\n",
       "      <td>70610.71</td>\n",
       "      <td>11255.34</td>\n",
       "      <td>84.40</td>\n",
       "      <td>10533.19</td>\n",
       "      <td>5131.06</td>\n",
       "      <td>7.27</td>\n",
       "      <td>91939.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.0</td>\n",
       "      <td>69202.76</td>\n",
       "      <td>4662.00</td>\n",
       "      <td>50.57</td>\n",
       "      <td>2020.60</td>\n",
       "      <td>4273.10</td>\n",
       "      <td>6.17</td>\n",
       "      <td>33793.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.0</td>\n",
       "      <td>69202.76</td>\n",
       "      <td>4662.00</td>\n",
       "      <td>50.57</td>\n",
       "      <td>2020.60</td>\n",
       "      <td>4273.10</td>\n",
       "      <td>6.17</td>\n",
       "      <td>33793.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.0</td>\n",
       "      <td>66967.31</td>\n",
       "      <td>19441.80</td>\n",
       "      <td>80.48</td>\n",
       "      <td>2178.82</td>\n",
       "      <td>8830.34</td>\n",
       "      <td>13.19</td>\n",
       "      <td>69777.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.0</td>\n",
       "      <td>53614.00</td>\n",
       "      <td>3839.27</td>\n",
       "      <td>33.34</td>\n",
       "      <td>4796.04</td>\n",
       "      <td>2980.22</td>\n",
       "      <td>5.56</td>\n",
       "      <td>30738.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.0</td>\n",
       "      <td>45749.16</td>\n",
       "      <td>11394.46</td>\n",
       "      <td>75.46</td>\n",
       "      <td>1205.43</td>\n",
       "      <td>1981.71</td>\n",
       "      <td>4.33</td>\n",
       "      <td>61758.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.0</td>\n",
       "      <td>44995.65</td>\n",
       "      <td>7587.24</td>\n",
       "      <td>50.57</td>\n",
       "      <td>12464.32</td>\n",
       "      <td>2728.44</td>\n",
       "      <td>6.06</td>\n",
       "      <td>51638.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0.0</td>\n",
       "      <td>35703.50</td>\n",
       "      <td>3273.62</td>\n",
       "      <td>54.60</td>\n",
       "      <td>2455.72</td>\n",
       "      <td>1926.01</td>\n",
       "      <td>5.39</td>\n",
       "      <td>40557.27</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      0        0.1       0.2    0.3       0.4       0.5    0.6        0.7\n",
       "0   0.0  527692.69  71470.38  82.14  16894.15  11102.17   2.10  158941.23\n",
       "1   0.0  371019.00  44144.00  73.55  35163.00   5834.00   1.57  529757.00\n",
       "2   0.0  297275.05  21544.65  76.10   7132.02   3664.18   1.23   50320.54\n",
       "3   0.0  275197.42  20193.42  77.84   6028.66   2938.48   1.07   39869.30\n",
       "6   0.0  109609.42   7749.17  46.42  26715.79  12113.03  11.05  185075.44\n",
       "8   0.0   90307.43   7988.02  43.02  11749.89   4779.89   5.29  201121.02\n",
       "10  0.0   86020.30   3325.70  57.19   7500.60   3254.90   3.78   42713.40\n",
       "11  0.0   76727.00  10599.00  46.03   8259.00   1400.00   1.82   58826.00\n",
       "12  0.0   75126.30   2321.91  30.56   6025.67   1778.37   2.37   39494.57\n",
       "14  0.0   70610.71  11255.34  84.40  10533.19   5131.06   7.27   91939.23\n",
       "15  0.0   69202.76   4662.00  50.57   2020.60   4273.10   6.17   33793.67\n",
       "16  0.0   69202.76   4662.00  50.57   2020.60   4273.10   6.17   33793.67\n",
       "17  0.0   66967.31  19441.80  80.48   2178.82   8830.34  13.19   69777.05\n",
       "21  0.0   53614.00   3839.27  33.34   4796.04   2980.22   5.56   30738.24\n",
       "27  0.0   45749.16  11394.46  75.46   1205.43   1981.71   4.33   61758.83\n",
       "28  0.0   44995.65   7587.24  50.57  12464.32   2728.44   6.06   51638.94\n",
       "37  0.0   35703.50   3273.62  54.60   2455.72   1926.01   5.39   40557.27"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clean_dataset(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[7.65700000e+03 5.66600000e+01 5.07500000e+03 4.42136570e+03\n",
      "  1.97521000e+01 1.03865000e+05]\n",
      " [2.95093000e+03 5.49300000e+01 1.09687000e+03 1.14428000e+03\n",
      "  7.23000000e+00 1.65502516e+05]\n",
      " [1.30839000e+03 4.28600000e+01 3.05043000e+03 4.42136570e+03\n",
      "  1.97521000e+01 1.65502516e+05]\n",
      " ...\n",
      " [2.61968000e+03 8.58500000e+01 4.37485850e+03 4.42136570e+03\n",
      "  1.97521000e+01 1.65502516e+05]\n",
      " [5.28832230e+03 6.26283000e+01 4.37485850e+03 3.13779000e+03\n",
      "  1.10100000e+01 1.65502516e+05]\n",
      " [5.28832230e+03 6.26283000e+01 1.28247000e+03 1.18961000e+03\n",
      "  3.21700000e+01 1.65502516e+05]]\n",
      "[[ 38644.   ]\n",
      " [ 15837.   ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 14330.63 ]\n",
      " [ 69202.76 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 51310.25 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 28979.44 ]\n",
      " [ 15522.44 ]\n",
      " [242868.65 ]\n",
      " [ 49092.549]\n",
      " [ 19916.25 ]\n",
      " [ 49092.549]\n",
      " [ 23943.21 ]\n",
      " [ 17631.26 ]\n",
      " [ 46810.34 ]\n",
      " [ 12883.88 ]\n",
      " [ 33650.54 ]\n",
      " [ 73107.   ]\n",
      " [ 49092.549]\n",
      " [ 12257.89 ]\n",
      " [ 49608.   ]\n",
      " [ 42670.89 ]\n",
      " [ 49092.549]\n",
      " [ 20164.9  ]\n",
      " [ 22071.24 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 62062.14 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 22638.57 ]\n",
      " [ 49092.549]\n",
      " [ 13495.65 ]\n",
      " [ 25309.72 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 12374.01 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 30348.95 ]\n",
      " [ 70610.71 ]\n",
      " [ 45749.16 ]\n",
      " [ 26012.   ]\n",
      " [ 49092.549]\n",
      " [ 54985.77 ]\n",
      " [ 49092.549]\n",
      " [ 28842.   ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 19894.12 ]\n",
      " [ 49092.549]\n",
      " [297275.05 ]\n",
      " [ 20550.43 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 29624.75 ]\n",
      " [ 49092.549]\n",
      " [ 86020.3  ]\n",
      " [ 49092.549]\n",
      " [ 15541.3  ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 11499.32 ]\n",
      " [275197.42 ]\n",
      " [ 12084.6  ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [527692.69 ]\n",
      " [ 12079.76 ]\n",
      " [ 11948.17 ]\n",
      " [ 16851.21 ]\n",
      " [ 27219.6  ]\n",
      " [ 27715.97 ]\n",
      " [ 12585.01 ]\n",
      " [ 49092.549]\n",
      " [ 49974.11 ]\n",
      " [ 13734.96 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [109609.42 ]\n",
      " [ 17355.02 ]\n",
      " [ 12729.23 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 12245.24 ]\n",
      " [ 49092.549]\n",
      " [ 76727.   ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 38224.   ]\n",
      " [ 21118.   ]\n",
      " [ 18209.92 ]\n",
      " [371019.   ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 30249.96 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 66967.31 ]\n",
      " [ 34119.12 ]\n",
      " [ 49092.549]\n",
      " [ 23286.53 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 38395.43 ]\n",
      " [ 44995.65 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 41338.39 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 40767.81 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 43348.04 ]\n",
      " [ 49092.549]\n",
      " [ 11419.02 ]\n",
      " [ 12977.52 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 13683.8  ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 15656.65 ]\n",
      " [ 14081.15 ]\n",
      " [ 48123.8  ]\n",
      " [ 49092.549]\n",
      " [ 13203.85 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 34066.66 ]\n",
      " [ 49092.549]\n",
      " [ 20891.6  ]\n",
      " [ 49092.549]\n",
      " [ 12353.77 ]\n",
      " [ 49092.549]\n",
      " [ 16391.78 ]\n",
      " [ 12368.9  ]\n",
      " [ 36858.8  ]\n",
      " [ 53614.   ]\n",
      " [ 49092.549]\n",
      " [ 86987.86 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 17383.97 ]\n",
      " [ 49092.549]\n",
      " [ 49092.549]\n",
      " [ 28496.77 ]\n",
      " [ 49092.549]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "#np.where(x.values >= np.finfo(np.float64).max)\n",
    "regressor = LinearRegression()\n",
    "np.any(np.isnan(X_train))\n",
    "np.all(np.isfinite(X_train))\n",
    "np.any(np.isnan(y_train))\n",
    "np.all(np.isfinite(y_train))\n",
    "print(X_train)\n",
    "print(y_train)\n",
    "regressor.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "ename": "AssertionError",
     "evalue": "Number of manager items must equal union of block items\n# manager items: 8, # tot_items: 0",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-103-dedd3f982a56>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mnanIndex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misnan\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mnanIndex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnanIndex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mnanIndex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnanIndex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mtruthValues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtruthValues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnanIndex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36margwhere\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/numpy/core/numeric.py\u001b[0m in \u001b[0;36margwhere\u001b[0;34m(a)\u001b[0m\n\u001b[1;32m    582\u001b[0m         \u001b[0;31m# then remove the added dimension\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    583\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0margwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 584\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtranspose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    585\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    586\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mnonzero\u001b[0;34m(*args, **kwargs)\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36mnonzero\u001b[0;34m(a)\u001b[0m\n\u001b[1;32m   1894\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1895\u001b[0m     \"\"\"\n\u001b[0;32m-> 1896\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'nonzero'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1897\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1898\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapfunc\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mbound\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_wrapit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_wrapit\u001b[0;34m(obj, method, *args, **kwds)\u001b[0m\n\u001b[1;32m     49\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwrap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__array_wrap__\u001b[0;34m(self, result, context)\u001b[0m\n\u001b[1;32m   1916\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1917\u001b[0m         \u001b[0md\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_construct_axes_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_AXIS_ORDERS\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1918\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1919\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1920\u001b[0m     \u001b[0;31m# ideally we would define this to avoid the getattr checks, but\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    462\u001b[0m                 \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minit_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    463\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 464\u001b[0;31m                 \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minit_ndarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    465\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    466\u001b[0m         \u001b[0;31m# For data is list-like, or Iterable (will consume into list)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/internals/construction.py\u001b[0m in \u001b[0;36minit_ndarray\u001b[0;34m(values, index, columns, dtype, copy)\u001b[0m\n\u001b[1;32m    208\u001b[0m         \u001b[0mblock_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 210\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mcreate_block_manager_from_blocks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblock_values\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    211\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mcreate_block_manager_from_blocks\u001b[0;34m(blocks, axes)\u001b[0m\n\u001b[1;32m   1655\u001b[0m                 ]\n\u001b[1;32m   1656\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1657\u001b[0;31m         \u001b[0mmgr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBlockManager\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblocks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1658\u001b[0m         \u001b[0mmgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_consolidate_inplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1659\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mmgr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, blocks, axes, do_integrity_check)\u001b[0m\n\u001b[1;32m    137\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    138\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdo_integrity_check\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 139\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_verify_integrity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_consolidate_check\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/usr/local/lib/python3.7/site-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_verify_integrity\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    335\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mtot_items\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m             raise AssertionError(\n\u001b[0;32m--> 337\u001b[0;31m                 \u001b[0;34m\"Number of manager items must equal union of \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    338\u001b[0m                 \u001b[0;34mf\"block items\\n# manager items: {len(self.items)}, # \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m                 \u001b[0;34mf\"tot_items: {tot_items}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAssertionError\u001b[0m: Number of manager items must equal union of block items\n# manager items: 8, # tot_items: 0"
     ]
    }
   ],
   "source": [
    "nanIndex = np.argwhere(np.isnan(dataset))\n",
    "nanIndex = np.delete(nanIndex, 1, 1)\n",
    "nanIndex = np.unique(nanIndex)\n",
    "truthValues = np.delete(truthValues, nanIndex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = regressor.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[33mDEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\u001b[0m\n",
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Collecting statsmodels\n",
      "  Downloading statsmodels-0.11.0.tar.gz (15.4 MB)\n",
      "\u001b[K     |████████████████████████████████| 15.4 MB 582 kB/s eta 0:00:01\n",
      "\u001b[?25h  Installing build dependencies ... \u001b[?25ldone\n",
      "\u001b[?25h  Getting requirements to build wheel ... \u001b[?25ldone\n",
      "\u001b[?25h    Preparing wheel metadata ... \u001b[?25ldone\n",
      "\u001b[?25hCollecting patsy>=0.5\n",
      "  Downloading patsy-0.5.1-py2.py3-none-any.whl (231 kB)\n",
      "\u001b[K     |████████████████████████████████| 231 kB 5.9 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: scipy>=1.0 in ./Library/Python/2.7/lib/python/site-packages (from statsmodels) (1.2.3)\n",
      "Requirement already satisfied: pandas>=0.21 in ./Library/Python/2.7/lib/python/site-packages (from statsmodels) (0.24.2)\n",
      "Requirement already satisfied: numpy>=1.14 in ./Library/Python/2.7/lib/python/site-packages (from statsmodels) (1.16.6)\n",
      "Requirement already satisfied: six in ./Library/Python/2.7/lib/python/site-packages (from patsy>=0.5->statsmodels) (1.14.0)\n",
      "Requirement already satisfied: pytz>=2011k in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from pandas>=0.21->statsmodels) (2013.7)\n",
      "Requirement already satisfied: python-dateutil>=2.5.0 in ./Library/Python/2.7/lib/python/site-packages (from pandas>=0.21->statsmodels) (2.8.1)\n",
      "Building wheels for collected packages: statsmodels\n",
      "  Building wheel for statsmodels (PEP 517) ... \u001b[?25ldone\n",
      "\u001b[?25h  Created wheel for statsmodels: filename=statsmodels-0.11.0-cp27-cp27m-macosx_10_14_intel.whl size=8296412 sha256=25480f1be8ea29335c47793fced4d98960f34c7f81904a8a757ccb06981ce5db\n",
      "  Stored in directory: /Users/lalitgera/Library/Caches/pip/wheels/d6/4b/04/4ec67d8a1e51035490e2a56ef2ad5b5dc3481084cdfeefa365\n",
      "Successfully built statsmodels\n",
      "Installing collected packages: patsy, statsmodels\n",
      "Successfully installed patsy-0.5.1 statsmodels-0.11.0\n"
     ]
    }
   ],
   "source": [
    "!python -m pip install statsmodels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting statsmodels\n",
      "  Downloading statsmodels-0.11.1-cp37-cp37m-macosx_10_13_x86_64.whl (8.4 MB)\n",
      "\u001b[K     |████████████████████████████████| 8.4 MB 5.3 MB/s eta 0:00:01\n",
      "\u001b[?25hRequirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/site-packages (from statsmodels) (1.4.1)\n",
      "Collecting patsy>=0.5\n",
      "  Using cached patsy-0.5.1-py2.py3-none-any.whl (231 kB)\n",
      "Requirement already satisfied: pandas>=0.21 in /usr/local/lib/python3.7/site-packages (from statsmodels) (1.0.3)\n",
      "Requirement already satisfied: numpy>=1.14 in /usr/local/lib/python3.7/site-packages (from statsmodels) (1.18.2)\n",
      "Requirement already satisfied: six in /usr/local/lib/python3.7/site-packages (from patsy>=0.5->statsmodels) (1.14.0)\n",
      "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.7/site-packages (from pandas>=0.21->statsmodels) (2.8.1)\n",
      "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/site-packages (from pandas>=0.21->statsmodels) (2020.1)\n",
      "Installing collected packages: patsy, statsmodels\n",
      "Successfully installed patsy-0.5.1 statsmodels-0.11.1\n"
     ]
    }
   ],
   "source": [
    "!python3 -m pip install statsmodels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.formula.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "from statsmodels import api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared:         </th> <td>   0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.648</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   421.8</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sat, 09 May 2020</td> <th>  Prob (F-statistic):</th> <td>9.16e-54</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>02:50:05</td>     <th>  Log-Likelihood:    </th> <td> -2692.1</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   230</td>      <th>  AIC:               </th> <td>   5388.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   228</td>      <th>  BIC:               </th> <td>   5395.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td> 1.281e+04</td> <td> 2624.948</td> <td>    4.880</td> <td> 0.000</td> <td> 7636.560</td> <td>  1.8e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>x1</th>    <td>    6.8611</td> <td>    0.334</td> <td>   20.538</td> <td> 0.000</td> <td>    6.203</td> <td>    7.519</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>112.327</td> <th>  Durbin-Watson:     </th> <td>   0.515</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>1350.549</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 1.567</td>  <th>  Prob(JB):          </th> <td>5.40e-294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td>14.450</td>  <th>  Cond. No.          </th> <td>1.06e+04</td> \n",
       "</tr>\n",
       "</table><br/><br/>Warnings:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 1.06e+04. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                      y   R-squared:                       0.649\n",
       "Model:                            OLS   Adj. R-squared:                  0.648\n",
       "Method:                 Least Squares   F-statistic:                     421.8\n",
       "Date:                Sat, 09 May 2020   Prob (F-statistic):           9.16e-54\n",
       "Time:                        02:50:05   Log-Likelihood:                -2692.1\n",
       "No. Observations:                 230   AIC:                             5388.\n",
       "Df Residuals:                     228   BIC:                             5395.\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const       1.281e+04   2624.948      4.880      0.000    7636.560     1.8e+04\n",
       "x1             6.8611      0.334     20.538      0.000       6.203       7.519\n",
       "==============================================================================\n",
       "Omnibus:                      112.327   Durbin-Watson:                   0.515\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1350.549\n",
       "Skew:                           1.567   Prob(JB):                    5.40e-294\n",
       "Kurtosis:                      14.450   Cond. No.                     1.06e+04\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 1.06e+04. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = np.append(arr = np.ones((230, 1)).astype(int), values = X, axis = 1)\n",
    "X_opt = X[:, [0, 1, 2, 3, 4, 5]]\n",
    "regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\n",
    "regressor_OLS.summary()\n",
    "X_opt = X[:, [0, 1, 3, 4, 5]]\n",
    "regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\n",
    "regressor_OLS.summary()\n",
    "X_opt = X[:, [0, 3, 4, 5]]\n",
    "regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\n",
    "regressor_OLS.summary()\n",
    "X_opt = X[:, [0, 3, 5]]\n",
    "regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\n",
    "regressor_OLS.summary()\n",
    "X_opt = X[:, [0, 3]]\n",
    "regressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\n",
    "regressor_OLS.summary()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
